const incMake4k = require('./4klang_inc/4klang_inc.make.js');

global.bpm = 120;
global.pattern_size_shift = 4;
global.looptimes = 100;

/*soloInstrument('pad1');
soloInstrument('pad2');
soloInstrument('pad3');*/
// soloInstrument('lead');

addInstrument('kick', `	GO4K_ENV	ATTAC(0),DECAY(64),SUSTAIN(96),RELEASE(64),GAIN(120)
GO4K_FST	AMOUNT(128),DEST(0*MAX_UNIT_SLOTS+2+FST_SET)
GO4K_ENV	ATTAC(0),DECAY(70),SUSTAIN(0),RELEASE(0),GAIN(100)
GO4K_DST	DRIVE(32), SNHFREQ(128), FLAGS(0)
GO4K_FST	AMOUNT(80),DEST(6*MAX_UNIT_SLOTS+1+FST_SET)
GO4K_FOP	OP(FOP_POP)
GO4K_VCO	TRANSPOSE(46),DETUNE(64),PHASE(0),GATES(85),COLOR(64),SHAPE(64),GAIN(48),FLAGS(TRISAW)
GO4K_FOP	OP(FOP_MULP)
GO4K_FOP	OP(FOP_LOADNOTE)
GO4K_FOP	OP(FOP_MULP)
GO4K_PAN	PANNING(64)
GO4K_OUT	GAIN(30), AUXSEND(0)`);

addInstrument('bass', `
GO4K_ENV	ATTAC(32),DECAY(70),SUSTAIN(60),RELEASE(75),GAIN(25)
GO4K_FST	AMOUNT(120),DEST(0*MAX_UNIT_SLOTS+2+FST_SET)
GO4K_VCO	TRANSPOSE(64),DETUNE(64),PHASE(32),GATES(85),COLOR(80),SHAPE(64),GAIN(128),FLAGS(PULSE)
GO4K_VCO	TRANSPOSE(64),DETUNE(72),PHASE(32),GATES(85),COLOR(96),SHAPE(64),GAIN(128),FLAGS(TRISAW)
GO4K_VCO	TRANSPOSE(32),DETUNE(64),PHASE(0),GATES(85),COLOR(64),SHAPE(90),GAIN(128),FLAGS(SINE|LFO)
GO4K_FST	AMOUNT(68),DEST(2*MAX_UNIT_SLOTS+2+FST_SET)
GO4K_FST	AMOUNT(60),DEST(3*MAX_UNIT_SLOTS+2+FST_SET)
GO4K_FOP	OP(FOP_POP)
GO4K_FOP	OP(FOP_ADDP)
GO4K_FOP	OP(FOP_MULP)
GO4K_VCF	FREQUENCY(18),RESONANCE(64),VCFTYPE(PEAK)
GO4K_VCF	FREQUENCY(32),RESONANCE(48),VCFTYPE(LOWPASS)
GO4K_DST	DRIVE(88), SNHFREQ(128), FLAGS(0)
GO4K_PAN	PANNING(80)
GO4K_DLL	PREGAIN(64),DRY(128),FEEDBACK(96),DAMP(64),FREQUENCY(0),DEPTH(0),DELAY(17),COUNT(1) ; ERROR
GO4K_FOP	OP(FOP_XCH)
GO4K_DLL	PREGAIN(64),DRY(128),FEEDBACK(64),DAMP(64),FREQUENCY(0),DEPTH(0),DELAY(18),COUNT(1) ; ERROR
GO4K_FOP	OP(FOP_XCH)
GO4K_OUT	GAIN(25), AUXSEND(10)
`);

const pad = (panning) => `GO4K_ENV        ATTAC(64),DECAY(10),SUSTAIN(120),RELEASE(64),GAIN(25)
GO4K_ENV        ATTAC(90),DECAY(80),SUSTAIN(40),RELEASE(64),GAIN(20)
GO4K_FST	AMOUNT(100),DEST(11*MAX_UNIT_SLOTS+4+FST_SET)
GO4K_FST	AMOUNT(100),DEST(12*MAX_UNIT_SLOTS+4+FST_SET)
GO4K_FOP	OP(FOP_POP)
GO4K_VCO        TRANSPOSE(64),DETUNE(67),PHASE(64),GATES(127),COLOR(40),SHAPE(50),GAIN(128),FLAGS(TRISAW|VCO_STEREO)
GO4K_VCO        TRANSPOSE(64),DETUNE(61),PHASE(64),GATES(127),COLOR(100),SHAPE(100),GAIN(128),FLAGS(TRISAW|VCO_STEREO)
GO4K_FOP        OP(FOP_ADDP)
GO4K_FOP        OP(FOP_ADDP)
GO4K_FOP        OP(FOP_MULP)
GO4K_FOP        OP(FOP_MULP)
GO4K_VCF	FREQUENCY(32),RESONANCE(70),VCFTYPE(LOWPASS)
GO4K_VCF	FREQUENCY(32),RESONANCE(90),VCFTYPE(LOWPASS)
GO4K_PAN        PANNING(${panning})
GO4K_OUT        GAIN(10), AUXSEND(40)`;

addInstrument('lead',`GO4K_ENV        ATTAC(42),DECAY(20),SUSTAIN(100),RELEASE(64),GAIN(30)
GO4K_VCO        TRANSPOSE(64),DETUNE(60),PHASE(32),GATES(85),COLOR(64),SHAPE(64),GAIN(128),FLAGS(SINE|VCO_STEREO)
GO4K_VCO        TRANSPOSE(64),DETUNE(68),PHASE(32),GATES(85),COLOR(90),SHAPE(40),GAIN(128),FLAGS(SINE|VCO_STEREO)
GO4K_FOP        OP(FOP_ADDP)
GO4K_FOP        OP(FOP_ADDP)
GO4K_FOP        OP(FOP_MULP)
GO4K_FOP        OP(FOP_MULP)
GO4K_PAN        PANNING(55)
GO4K_DLL	PREGAIN(64),DRY(128),FEEDBACK(96),DAMP(64),FREQUENCY(0),DEPTH(0),DELAY(17),COUNT(1)
GO4K_FOP	OP(FOP_XCH)
GO4K_DLL	PREGAIN(64),DRY(128),FEEDBACK(64),DAMP(64),FREQUENCY(0),DEPTH(0),DELAY(18),COUNT(1)
GO4K_FOP	OP(FOP_XCH)
GO4K_OUT        GAIN(20), AUXSEND(64)`);

addInstrument('pad1', pad(30));
addInstrument('pad2', pad(60));
addInstrument('pad3', pad(100));
addInstrumentGroup('pads', ['pad1', 'pad2', 'pad3']);

playPatterns({
	kick: pp(1,[c3,c3,c3,c3]),
	bass: pp(4, [g4,,,, ,,,d4, ,,d4,,f4,g4]),
	pads: pp(1,[
				[g5(2),d5(2),b5(2)],
				,
				[g5(2),e5(2),c6(2)],
			],3),
	lead: pp(4,[
		,,d7,, 
		d7,,b6,, 
		e7,d7,,b6, 
		,a6,,g6,
		,g6,,g6,
		,d6,,f6,
		g6,,,
	])
},1);

playPatterns({
	kick: pp(1,[c3,c3,c3,c3]),
	bass: pp(4, [g4,,,, ,,,d4, ,,d4,,f4,g4]),
	pads: pp(1,[
				[a5(2),f5(2),d6(2)],
				,
				[g5(2),e5(2),c6(2)],
			],3)
},1);

incMake4k.makeVierKlangInc();